{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karlo\\\\FrontEd\\\\test\\\\floor-plan\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(125, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight); // document.body.appendChild( renderer.domElement );\n    // use ref as a mount point of the Three.js scene instead of the document.body\n\n    this.mount.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(2, 2, 2);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0xd3d3d3d3,\n      wireframe: true\n    }); //var building = new THREE.Mesh( geometry, material );\n    //scene.add( building );s\n\n    for (var i = 0; i < 5; i++) {\n      var mesh = new THREE.Mesh(geometry, material);\n\n      if (i === 0) {\n        mesh.position.set(0, -1, 0);\n        mesh.scale.set(1.25, 0.25, 1);\n        mesh.rotation.y = MathUtils.degToRad(45);\n        scene.add(mesh);\n      } else {\n        mesh.position.set(0, -1, 0);\n        mesh.scale.set(1.25, 0.25, 1);\n        cube.rotation.y = MathUtils.degToRad(45);\n        scene.add(mesh);\n      }\n    }\n\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate(); //animation for rotating object\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;","map":{"version":3,"sources":["C:/Users/karlo/FrontEd/test/floor-plan/src/App.js"],"names":["React","Component","ReactDOM","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","mount","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","wireframe","i","mesh","Mesh","position","set","scale","rotation","y","MathUtils","degToRad","add","cube","z","animate","requestAnimationFrame","render","ref","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as THREE from \"three\";\r\nclass App extends Component {\r\n  componentDidMount() { \r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera( 125, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n    var renderer = new THREE.WebGLRenderer({antialias:true});\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    // document.body.appendChild( renderer.domElement );\r\n    // use ref as a mount point of the Three.js scene instead of the document.body\r\n    this.mount.appendChild( renderer.domElement );\r\n    var geometry = new THREE.BoxGeometry( 2,2,2 );\r\n    var material = new THREE.MeshBasicMaterial( { color: 0xd3d3d3d3, wireframe:true} );\r\n    //var building = new THREE.Mesh( geometry, material );\r\n    //scene.add( building );s\r\n    for(var i = 0; i < 5; i++){\r\n      var mesh = new THREE.Mesh(geometry, material);\r\n      if (i === 0){\r\n        mesh.position.set(0,-1,0);\r\n        mesh.scale.set(1.25,0.25,1);\r\n        mesh.rotation.y = MathUtils.degToRad(45);\r\n        scene.add(mesh);\r\n      }\r\n      else{\r\n        mesh.position.set(0,-1,0);\r\n        mesh.scale.set(1.25,0.25,1);\r\n        cube.rotation.y = MathUtils.degToRad(45);\r\n        scene.add(mesh);\r\n      }\r\n    }\r\n\r\n\r\n    camera.position.z = 5;\r\n    var animate = function () {\r\n      requestAnimationFrame( animate );\r\n      renderer.render( scene, camera );\r\n    };\r\n    animate(); //animation for rotating object\r\n  }\r\n  render() {\r\n    return (\r\n      <div ref={ref => (this.mount = ref)} />\r\n    )\r\n  }\r\n}\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\nexport default App;"]},"metadata":{},"sourceType":"module"}