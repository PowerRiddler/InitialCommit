{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karlo\\\\FrontEd\\\\test\\\\floor-plan\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(125, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight); // document.body.appendChild( renderer.domElement );\n    // use ref as a mount point of the Three.js scene instead of the document.body\n\n    this.mount.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(5, 2.5, 0.5);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0xd3d3d3d3\n    }); //var building = new THREE.Mesh( geometry, material );\n\n    scene.add(building);\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      building.rotation.x = 2;\n      building.rotation.z = -1;\n      renderer.render(scene, camera);\n    };\n\n    animate(); //animation for rotating object\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;","map":{"version":3,"sources":["C:/Users/karlo/FrontEd/test/floor-plan/src/App.js"],"names":["React","Component","ReactDOM","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","mount","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","add","building","position","z","animate","requestAnimationFrame","rotation","x","render","ref","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA6B,GAA7B,EAAkCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA3D,EAAwE,GAAxE,EAA6E,IAA7E,CAAb;AACA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,CAAwB;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAkBN,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C,EAJkB,CAKlB;AACA;;AACA,SAAKK,KAAL,CAAWC,WAAX,CAAwBL,QAAQ,CAACM,UAAjC;AACA,QAAIC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,WAAV,CAAuB,CAAvB,EAA0B,GAA1B,EAA+B,GAA/B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf,CATkB,CAUlB;;AACAlB,IAAAA,KAAK,CAACmB,GAAN,CAAWC,QAAX;AACAlB,IAAAA,MAAM,CAACmB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AACA,QAAIC,OAAO,GAAG,YAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAH,MAAAA,QAAQ,CAACK,QAAT,CAAkBC,CAAlB,GAAsB,CAAtB;AACAN,MAAAA,QAAQ,CAACK,QAAT,CAAkBH,CAAlB,GAAsB,CAAC,CAAvB;AACAf,MAAAA,QAAQ,CAACoB,MAAT,CAAiB3B,KAAjB,EAAwBE,MAAxB;AACD,KALD;;AAMAqB,IAAAA,OAAO,GAnBW,CAmBP;AACZ;;AACDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKjB,KAAL,GAAaiB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA1ByB;;AA4B5B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAnC,QAAQ,CAAC+B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBE,WAAzB;AACA,eAAe/B,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as THREE from \"three\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera( 125, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n    var renderer = new THREE.WebGLRenderer({antialias:true});\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    // document.body.appendChild( renderer.domElement );\r\n    // use ref as a mount point of the Three.js scene instead of the document.body\r\n    this.mount.appendChild( renderer.domElement );\r\n    var geometry = new THREE.BoxGeometry( 5, 2.5, 0.5 );\r\n    var material = new THREE.MeshBasicMaterial( { color: 0xd3d3d3d3} );\r\n    //var building = new THREE.Mesh( geometry, material );\r\n    scene.add( building );\r\n    camera.position.z = 5;\r\n    var animate = function () {\r\n      requestAnimationFrame( animate );\r\n      building.rotation.x = 2;\r\n      building.rotation.z = -1;\r\n      renderer.render( scene, camera );\r\n    };\r\n    animate(); //animation for rotating object\r\n  }\r\n  render() {\r\n    return (\r\n      <div ref={ref => (this.mount = ref)} />\r\n    )\r\n  }\r\n}\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\nexport default App;"]},"metadata":{},"sourceType":"module"}